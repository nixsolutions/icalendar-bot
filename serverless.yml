service: icalendar-bot

custom:
  myStage: ${opt:stage, self:provider.stage}
  settings:
    dev:
      TELEGRAM_TOKEN: ${ssm:/app/${self:service}/dev/telegram_token}

provider:
  name: aws
  runtime: ruby2.7
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  memorySize: 128
  timeout: 7
  enviroment: ${self:custom.settings.${self:custom.myStage}}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:CreateTable"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "*"

  logs:
    frameworkLambda: true

layers:
  gemlayer:
    path: ruby

functions:
  icalendar:
    handler: webhook_handler.webhook
    layers:
      - {Ref: GemlayerLambdaLayer }
    environment:
      GEM_PATH: /opt/2.7.0
    events:
      - http:
          path: icalendar
          method: post
          cors: true

#package:
#  include:
#    - webhook_handler.rb
#    - app/**
#    - config/**
#    - lib/**
#    - system/**

#resources:
#  Resources:
#    usersTable:
#      Type: AWS::DynamoDB::Table
#      Properties:
#        TableName: ${self:custom.settings.${self:custom.myStage}.USERS_TABLE}
#        AttributeDefinitions:
#          - AttributeName: "user_id"
#            AttributeType: S
#        KeySchema:
#          - AttributeName: "user_id"
#            KeyType: "N"
#        ProvisionedThroughput:
#          ReadCapacityUnits: 1
#          WriteCapacityUnits: 1
